matrix(1:4, ncol=2)
matrixClass(matrix(1:4, ncol=2), 'rachel\'s house')
matrixClass(matrix(1:4, ncol=2), 'rachels house')
matrixClass(matrix(1:4, ncol=2), 'rachels house')
?sprintf
matrixClass(matrix(1:4, ncol=2), 'rachels house')
class(matrix(1:4, ncol=2))
quit()
n
matrixClass(matrix(1:4, ncol=2), 'rachel house')
library(Matrix)
matrixClass(Matrix(1:4, ncol=2), 'rachel house')
matrixClass(Matrix(1:4, ncol=2), 'edward house')
as(I+d, "symmetricMatrix")
str(as(I+d, "symmetricMatrix"))
str(luD)
x
x <- 1:5
x[x<4]
library(mcmcPack)
library(mcmcPACK)
require(MCMCpack)
?rinvGamma
??invGamma
rinvgamm
rinvgamma
library(Matrix)
?Diagonal
?repeat
genDelta(n, k)
genDelta(n, k)
str(genDelta(n, k))
n
k
str(luDinv)
solve(luD, y)
solve(luD, rnorm(n))
as.vector(solve(luD, rnorm(n)))
as.matrix(solve(luD, rnorm(n)))
str(as.matrix(solve(luD)))
str(matrix(solve(luD), ncol=n))
str(matrix(1:4, ncol=2))
quit()
n
nqnorm()
