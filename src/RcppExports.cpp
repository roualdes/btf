// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// tf_approx
using namespace Rcpp; typedef Eigen::VectorXd Vec; typedef Eigen::SparseMatrix<double> spMat;  List tf_approx(const Vec& y, const Vec& l, const spMat& D, const int& k, const double& eps, const double& tau, const int& max_iter);
RcppExport SEXP btf_tf_approx(SEXP ySEXP, SEXP lSEXP, SEXP DSEXP, SEXP kSEXP, SEXP epsSEXP, SEXP tauSEXP, SEXP max_iterSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< const Vec& >::type y(ySEXP );
        Rcpp::traits::input_parameter< const Vec& >::type l(lSEXP );
        Rcpp::traits::input_parameter< const spMat& >::type D(DSEXP );
        Rcpp::traits::input_parameter< const int& >::type k(kSEXP );
        Rcpp::traits::input_parameter< const double& >::type eps(epsSEXP );
        Rcpp::traits::input_parameter< const double& >::type tau(tauSEXP );
        Rcpp::traits::input_parameter< const int& >::type max_iter(max_iterSEXP );
        using namespace Rcpp; typedef Eigen::VectorXd Vec; typedef Eigen::SparseMatrix<double> spMat;  List __result = tf_approx(y, l, D, k, eps, tau, max_iter);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
